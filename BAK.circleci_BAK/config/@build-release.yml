version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
          keys:
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-f39f5d66161bdd79b182943a3accdd95510c4812-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-d8f06ad14416849abce755043d691e698bd16d6a-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f.tar.gz
          key: build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-3cfda1b5690c307901c2e26baa059f3225c5792b-{{checksum ".buildcache/cache-keys/package-3cfda1b5690c307901c2e26baa059f3225c5792b"}}
          name: Restore package cache
      - restore_cache:
          key: package-dafd551f5b0ee490fb09b1170caaf7bfb2922e03-{{checksum ".buildcache/cache-keys/package-dafd551f5b0ee490fb09b1170caaf7bfb2922e03"}}
          name: Restore package cache
      - restore_cache:
          key: package-b20baa49bf6fa882d4dce234ffcd0a3074bb728d-{{checksum ".buildcache/cache-keys/package-b20baa49bf6fa882d4dce234ffcd0a3074bb728d"}}
          name: Restore package cache
      - restore_cache:
          key: package-6b452b5af9f800ae54187f0161a2edbe50c43951-{{checksum ".buildcache/cache-keys/package-6b452b5af9f800ae54187f0161a2edbe50c43951"}}
          name: Restore package cache
      - restore_cache:
          key: package-c2fd0ec18f4ff60dcc0e47ff6aa909ebc1005364-{{checksum ".buildcache/cache-keys/package-c2fd0ec18f4ff60dcc0e47ff6aa909ebc1005364"}}
          name: Restore package cache
      - restore_cache:
          key: package-8170143088e9fe73d26ef2a1061743c3dc3e2795-{{checksum ".buildcache/cache-keys/package-8170143088e9fe73d26ef2a1061743c3dc3e2795"}}
          name: Restore package cache
      - restore_cache:
          key: package-ce9e6f46c9f3feb1e8cd15f293d915270c0ee938-{{checksum ".buildcache/cache-keys/package-ce9e6f46c9f3feb1e8cd15f293d915270c0ee938"}}
          name: Restore package cache
      - restore_cache:
          key: package-0a5b0c7c83f5832c6408bc5f178521f6864c2b09-{{checksum ".buildcache/cache-keys/package-0a5b0c7c83f5832c6408bc5f178521f6864c2b09"}}
          name: Restore package cache
      - restore_cache:
          key: package-01985c42039de1f7102a28d33252f2f5ebc07879-{{checksum ".buildcache/cache-keys/package-01985c42039de1f7102a28d33252f2f5ebc07879"}}
          name: Restore package cache
      - restore_cache:
          key: package-bccfbc932668198e1eb5e8e26b808450f2aca5ea-{{checksum ".buildcache/cache-keys/package-bccfbc932668198e1eb5e8e26b808450f2aca5ea"}}
          name: Restore package cache
      - restore_cache:
          key: package-ffe9de827f98113f176a41d1bc6bc53e13b2e8fd-{{checksum ".buildcache/cache-keys/package-ffe9de827f98113f176a41d1bc6bc53e13b2e8fd"}}
          name: Restore package cache
      - restore_cache:
          key: package-216ea8dba33688a607a388d97eb0309084e68e46-{{checksum ".buildcache/cache-keys/package-216ea8dba33688a607a388d97eb0309084e68e46"}}
          name: Restore package cache
      - restore_cache:
          key: package-2b702b531825aa63713e75a1d28c535c55ea6122-{{checksum ".buildcache/cache-keys/package-2b702b531825aa63713e75a1d28c535c55ea6122"}}
          name: Restore package cache
      - restore_cache:
          key: package-afb88d24d958266df793aa99b01a5f9455df2335-{{checksum ".buildcache/cache-keys/package-afb88d24d958266df793aa99b01a5f9455df2335"}}
          name: Restore package cache
      - restore_cache:
          key: package-246819b216e6c048bb7c6d4223bb192a4ce2855f-{{checksum ".buildcache/cache-keys/package-246819b216e6c048bb7c6d4223bb192a4ce2855f"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-ab0671082609259.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-ab0671082609259.tar.gz .buildcache/packages lockfile-ab0671082609259.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-ab0671082609259.tar.gz .buildcache/packages/store/*.json lockfile-ab0671082609259.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-ab0671082609259.yml
      - store_artifacts:
          path: packages-ab0671082609259.tar.gz
      - store_artifacts:
          path: meta-ab0671082609259.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3cfda1b5690c307901c2e26baa059f3225c5792b-{{checksum ".buildcache/cache-keys/package-3cfda1b5690c307901c2e26baa059f3225c5792b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3cfda1b5690c307901c2e26baa059f3225c5792b-{{checksum ".buildcache/cache-keys/package-3cfda1b5690c307901c2e26baa059f3225c5792b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3cfda1b5690c307901c2e26baa059f3225c5792b
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dafd551f5b0ee490fb09b1170caaf7bfb2922e03-{{checksum ".buildcache/cache-keys/package-dafd551f5b0ee490fb09b1170caaf7bfb2922e03"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dafd551f5b0ee490fb09b1170caaf7bfb2922e03-{{checksum ".buildcache/cache-keys/package-dafd551f5b0ee490fb09b1170caaf7bfb2922e03"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dafd551f5b0ee490fb09b1170caaf7bfb2922e03
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b20baa49bf6fa882d4dce234ffcd0a3074bb728d-{{checksum ".buildcache/cache-keys/package-b20baa49bf6fa882d4dce234ffcd0a3074bb728d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b20baa49bf6fa882d4dce234ffcd0a3074bb728d-{{checksum ".buildcache/cache-keys/package-b20baa49bf6fa882d4dce234ffcd0a3074bb728d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b20baa49bf6fa882d4dce234ffcd0a3074bb728d
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6b452b5af9f800ae54187f0161a2edbe50c43951-{{checksum ".buildcache/cache-keys/package-6b452b5af9f800ae54187f0161a2edbe50c43951"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6b452b5af9f800ae54187f0161a2edbe50c43951-{{checksum ".buildcache/cache-keys/package-6b452b5af9f800ae54187f0161a2edbe50c43951"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6b452b5af9f800ae54187f0161a2edbe50c43951
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c2fd0ec18f4ff60dcc0e47ff6aa909ebc1005364-{{checksum ".buildcache/cache-keys/package-c2fd0ec18f4ff60dcc0e47ff6aa909ebc1005364"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c2fd0ec18f4ff60dcc0e47ff6aa909ebc1005364-{{checksum ".buildcache/cache-keys/package-c2fd0ec18f4ff60dcc0e47ff6aa909ebc1005364"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c2fd0ec18f4ff60dcc0e47ff6aa909ebc1005364
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8170143088e9fe73d26ef2a1061743c3dc3e2795-{{checksum ".buildcache/cache-keys/package-8170143088e9fe73d26ef2a1061743c3dc3e2795"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8170143088e9fe73d26ef2a1061743c3dc3e2795-{{checksum ".buildcache/cache-keys/package-8170143088e9fe73d26ef2a1061743c3dc3e2795"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8170143088e9fe73d26ef2a1061743c3dc3e2795
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ce9e6f46c9f3feb1e8cd15f293d915270c0ee938-{{checksum ".buildcache/cache-keys/package-ce9e6f46c9f3feb1e8cd15f293d915270c0ee938"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ce9e6f46c9f3feb1e8cd15f293d915270c0ee938-{{checksum ".buildcache/cache-keys/package-ce9e6f46c9f3feb1e8cd15f293d915270c0ee938"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ce9e6f46c9f3feb1e8cd15f293d915270c0ee938
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0a5b0c7c83f5832c6408bc5f178521f6864c2b09-{{checksum ".buildcache/cache-keys/package-0a5b0c7c83f5832c6408bc5f178521f6864c2b09"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0a5b0c7c83f5832c6408bc5f178521f6864c2b09-{{checksum ".buildcache/cache-keys/package-0a5b0c7c83f5832c6408bc5f178521f6864c2b09"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0a5b0c7c83f5832c6408bc5f178521f6864c2b09
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-01985c42039de1f7102a28d33252f2f5ebc07879-{{checksum ".buildcache/cache-keys/package-01985c42039de1f7102a28d33252f2f5ebc07879"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-01985c42039de1f7102a28d33252f2f5ebc07879-{{checksum ".buildcache/cache-keys/package-01985c42039de1f7102a28d33252f2f5ebc07879"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 01985c42039de1f7102a28d33252f2f5ebc07879
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bccfbc932668198e1eb5e8e26b808450f2aca5ea-{{checksum ".buildcache/cache-keys/package-bccfbc932668198e1eb5e8e26b808450f2aca5ea"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bccfbc932668198e1eb5e8e26b808450f2aca5ea-{{checksum ".buildcache/cache-keys/package-bccfbc932668198e1eb5e8e26b808450f2aca5ea"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bccfbc932668198e1eb5e8e26b808450f2aca5ea
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ffe9de827f98113f176a41d1bc6bc53e13b2e8fd-{{checksum ".buildcache/cache-keys/package-ffe9de827f98113f176a41d1bc6bc53e13b2e8fd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ffe9de827f98113f176a41d1bc6bc53e13b2e8fd-{{checksum ".buildcache/cache-keys/package-ffe9de827f98113f176a41d1bc6bc53e13b2e8fd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ffe9de827f98113f176a41d1bc6bc53e13b2e8fd
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-216ea8dba33688a607a388d97eb0309084e68e46-{{checksum ".buildcache/cache-keys/package-216ea8dba33688a607a388d97eb0309084e68e46"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-216ea8dba33688a607a388d97eb0309084e68e46-{{checksum ".buildcache/cache-keys/package-216ea8dba33688a607a388d97eb0309084e68e46"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 216ea8dba33688a607a388d97eb0309084e68e46
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2b702b531825aa63713e75a1d28c535c55ea6122-{{checksum ".buildcache/cache-keys/package-2b702b531825aa63713e75a1d28c535c55ea6122"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2b702b531825aa63713e75a1d28c535c55ea6122-{{checksum ".buildcache/cache-keys/package-2b702b531825aa63713e75a1d28c535c55ea6122"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2b702b531825aa63713e75a1d28c535c55ea6122
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-afb88d24d958266df793aa99b01a5f9455df2335-{{checksum ".buildcache/cache-keys/package-afb88d24d958266df793aa99b01a5f9455df2335"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-afb88d24d958266df793aa99b01a5f9455df2335-{{checksum ".buildcache/cache-keys/package-afb88d24d958266df793aa99b01a5f9455df2335"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: afb88d24d958266df793aa99b01a5f9455df2335
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-246819b216e6c048bb7c6d4223bb192a4ce2855f-{{checksum ".buildcache/cache-keys/package-246819b216e6c048bb7c6d4223bb192a4ce2855f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-246819b216e6c048bb7c6d4223bb192a4ce2855f-{{checksum ".buildcache/cache-keys/package-246819b216e6c048bb7c6d4223bb192a4ce2855f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 246819b216e6c048bb7c6d4223bb192a4ce2855f
workflows:
  build-ab0671082609259:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
